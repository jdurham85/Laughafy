<?php/** * . * User: Jermaine Durham * Date: 7/2/18 * Time: 8:14 AM */class config{    public function __construct()    {        //require_once "timezone.php";        //ini_set('display_errors', 1);        //ini_set('display_startup_errors', 1);        //error_reporting(E_ALL);        $dbfile = (file_exists("model/database.php") ? true : false);        $db = "";        if ($dbfile == true) {            require_once "model/database.php";            $db = new database();        } elseif (file_exists("../model/database.php")) {            require_once "../model/database.php";            $db = new database();        }        $profiledfile = (file_exists("../model/profiled.php") ? true : false);        if ($profiledfile == true) {            require_once "../model/profiled.php";        } else {            require_once "model/profiled.php";        }        //$timezonefile = (file_exists("timezone.php") ? true : false);        if (file_exists("timezone.php")) {            require_once "timezone.php";            //echo "1";        }elseif (file_exists("core/timezone.php")) {            require_once "core/timezone.php";           // echo "2";        } else {            require_once "../core/timezone.php";            //echo "3";        }        $currentmemberid = $this->get_session_id();        $country = namespace\profiled::MemberCountry($currentmemberid);        $region  = namespace\profiled::MemberRegion($currentmemberid);        //$timezone = new timezone();        //echo(strtoupper($country['code']));        //echo timezone::get_time_zone(strtoupper($country['code']), strtoupper($region['code']));        //Set default from set location (Country, Region)        date_default_timezone_set(timezone::get_time_zone(strtoupper($country['code']), strtoupper($region['code'])));        //echo date_default_timezone_get();    }    public function get_session_id()    {        return ($_SESSION['SessionMemberID']);    }    public static function get_member_id()    {        return ($_SESSION['SessionMemberID']);    }    public function encode_id($int)    {    }    public static function word_filter($word)    {        $bad_word = ['fucking',            'fucker',            'fuck',            'motherfucker',            'motherfucking',            'ass',            'bitch',            'bitch-ass',            'shit',            'shiting',            'kill',            'killer',            'pussy',            'pussy ass',            'pussy ass bitch'];        for ($i = 0; $i < count($bad_word); $i++) {            if (strpos(ucwords($word), ucwords($bad_word[$i]))) {                $word = str_replace(ucwords($bad_word[$i]), "", ucwords($word));            }        }        return $word;    }}